name: Check

on:
    push:
        branches:
            - '*'

        # We tag this repo with a tag for every project when we want to
        # release. But we really don't need to spend the time checking against
        # all of those tags when we've already checked the commit.
        tags:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Environment variables
              run: echo -e "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME\nGITHUB_EVENT_PATH=$GITHUB_EVENT_PATH\nGITHUB_REF=$GITHUB_REF"

            - name: cat events
              run: cat $GITHUB_EVENT_PATH

            - name: checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Output git log
              run: git log --pretty=format:"* %s"

#            - name: Make git log an output?
#              id: generate-log
#              run: |
#                  output=$(git log --pretty=format:"* %s")
#                  echo "::set-output name=log::$output"
#
#            - name: Test output
#              run: echo ${{ steps.generate-log.outputs.log }}

            - name: Test a multi-line output with newlines?
              id: multi-line
              run: |
                  echo "::set-output name=log::one\\ntwo\\nthree"

            - name: Test output
              run: echo '"${{ steps.multi-line.outputs.log }}"'

            - name: Install curl, jq
              run: sudo apt-get install -y curl jq

            - name: "Generate all the things"
              run: |
                  message="Ralph $(git describe --abbrev=0 --match='ralph_lambda-*' | sed -e 's|ralph_lambda-||') has been deployed to production"
                  echo $message | jq -R '{"message":.}' >message.json
                  git log --pretty=format:"* %s" --no-merges HEAD~8..HEAD | grep -v "cargo-release" | jq -Rn '[inputs]|join("\n")|{"log":.}' >git-log.json
                  jq -n --argfile m message.json --argfile l git-log.json '$m.message + "\n" + $l.log|{"text":.}' >payload.json
                  curl -X POST --data-urlencode payload@payload.json ${{ secrets.SLACK_WEBHOOK }}

#            - name: Slack Notification
#              uses: Ilshidur/action-slack@master
#              env:
#                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#              with:
#                  args: "A new Ralph version has been deployed to production.\n${{ steps.multi-line.outputs.log }}"
